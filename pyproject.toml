# Copyright (C) 2024-2025 Serghei Iakovlev <gnu@serghei.pl>
#
# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "space-wrangler"
version = "1.7.0"
description = "Confluence Space Management Toolkit."
authors = ["Serghei Iakovlev <gnu@serghei.pl>"]
maintainers = ["Serghei Iakovlev <gnu@serghei.pl>"]
license = "GPL-3.0-or-later"
readme = "README.md"
keywords = ["confluence", "cli", "atlassian", "maintenance", "documentation-management"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "Natural Language :: English",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
    "Topic :: Terminals",
    "Topic :: Text Processing",
    "Topic :: Utilities",
]
repository = "https://github.com/sergeyklay/space-wrangler"
homepage = "https://github.com/sergeyklay/space-wrangler"
documentation = "https://github.com/sergeyklay/space-wrangler?tab=readme-ov-file"
packages = [
    { include = "swrangler" }
]
include = [
    { path = "tests", format = "sdist" },
    "CONTRIBUTING.md",
    "LICENSE",
    "README.md",
    "SECURITY.md"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/sergeyklay/space-wrangler/issues"
Changelog = "https://github.com/sergeyklay/space-wrangler/releases"

[tool.poetry.scripts]
swrangler = "swrangler.cli:main"

[tool.poetry.dependencies]
python = ">=3.10, <4"
atlassian-python-api = "^3.41.19"
beautifulsoup4 = "^4.12.3"
click = "^8.1.8"
python-dotenv = "^1.0.1"
requests = "^2.32.3"
types-requests = "^2.32.0.20241016"

[tool.poetry.group.testing.dependencies]
coverage = {version = "^7.6.10", extras = ["toml"]}
pytest = "^8.3.4"
pytest-mock = "^3.14.0"
pylint = "^3.3.3"
flake8 = "^7.1.1"
flake8-import-order = "^0.18.2"
flake8-blind-except = "^0.2.1"
mypy = "^1.14.1"

[tool.poetry.group.dev.dependencies]
debugpy = "^1.8.9"

[tool.pytest.ini_options]
addopts = "--verbose --durations=25"

[tool.pylint.main]
# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use.
jobs = "0"

[tool.pylint.logging]
# The type of string formatting that logging methods do.
# 'old' means using % formatting, 'new' is for '{}' formatting.
logging-format-style = "new"

[tool.pylint.messages_control]
# Disable the message, report, category or checker with the given id(s).
disable = [
    "import-outside-toplevel",
    "logging-fstring-interpolation",
    "too-few-public-methods",
]

[tool.pylint.variables]
# List of qualified module names which can have objects that can redefine
# builtins.
redefining-builtins-modules = "requests.exceptions"

[tool.coverage.report]
# Set the number of decimal places in coverage percentage
precision = 2

# Show lines that were not executed
show_missing = true

[tool.coverage.html]
# Directory for the HTML format report
directory = "coverage/html"

[tool.coverage.xml]
# Filename for the XML format report
output = "coverage/xml/coverage.xml"

[tool.coverage.run]
# Enable branch coverage (default: False)
branch = true

# Run tests in parallel (useful when using CI/CD)
parallel = true

# Filename for storing coverage data
data_file = "coverage/coverage.db"

# Omit specified files or directories from the report
omit = [
    "*/.venv/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/tests/*",
]

[tool.mypy]
# The version of Python to use for type checking.
python_version = "3.9"

# Disallow function calls without type annotations.
disallow_untyped_calls = true

# Disallow defining functions without type annotations.
disallow_untyped_defs = true

# Disallow functions with incomplete type annotations.
disallow_incomplete_defs = true

# Check the bodies of untyped functions.
check_untyped_defs = true

# Ignore missing type hints for imported modules.
ignore_missing_imports = true

# Show error messages in a human-readable format
pretty = true

# Show the context of errors in the output
show_error_context = true
