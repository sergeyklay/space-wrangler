# This file is part of the confluence.
#
# Copyright (c) 2024 airSlate, Inc.
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

# Project-wide configuration file, can be used for package metadata and other
# tool configurations.

# Please keep all characters in this file in ASCII distutils uses system's
# locale to interpret it and not everybody uses UTF-8.
# See https://github.com/httpie/cli/issues/1039 for an example

[metadata]
name = confluence
version = attr: confluence.__version__
author = Serghei Iakovlev
author_email = serghei@airslate.com
maintainer = Serghei Iakovlev
maintainer_email = serghei@airslate.com
license = MIT
license_files = LICENSE
description = Confluence Space Management Toolkit.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/airslateinc/confluence-maintenance-tools
keywords =
    confluence
    cli
    atlassian
    maintenance
    documentation-management
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: System Administrators
    Intended Audience :: Information Technology
    Natural Language :: English
    License :: OSI Approved :: MIT
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: 3.13
    Programming Language :: Python :: 3.14
    Programming Language :: Python :: 3 :: Only
    Topic :: Software Development
    Topic :: Terminals
    Topic :: Text Processing
    Topic :: Utilities
platforms = any
project_urls =
    GitHub = https://github.com/airslateinc/confluence-maintenance-tools
    Documentation = https://github.com/airslateinc/confluence-maintenance-tools?tab=readme-ov-file
    Source Code = https://github.com/airslateinc/confluence-maintenance-tools
    Changelog = https://github.com/airslateinc/confluence-maintenance-tools/releases
    Changelog = https://github.com/airslateinc/confluence-maintenance-tools/issues

[options]
packages = find:
install_requires =
    pip
    atlassian-python-api>=3.41.0
    beautifulsoup4>=4.12.0
    click>=8.1.0
    python-dotenv>=1.0.1
    requests>=2.32.0
    types-requests>=2.32.0
python_requires = >=3.9, <4
zip_safe = False
include_package_data = True

[options.extras_require]
develop =
    build>=1.2.0
    check-manifest>=0.45
    coverage[toml]>=6.0
    flake8-blind-except>=0.2.0
    flake8-import-order>=0.18.1
    flake8>=6.0.0
    mypy>=1.100.0
    pylint>=2.6.2
    pytest-mock>=3.14.0
    pytest>=8.0.0
testing =
    check-manifest>=0.45
    coverage[toml]>=6.0
    flake8-blind-except>=0.2.0
    flake8-import-order>=0.18.1
    flake8>=6.0.0
    mypy>=1.100.0
    pylint>=2.6.2
    pytest-mock>=3.14.0
    pytest>=8.0.0

[options.packages.find]
exclude =
    tests
    tests.*

[options.entry_points]
console_scripts =
    confluence = confluence.cli:main


[tool:pytest]
addopts =
    --verbose
    --doctest-modules
    --durations=25
    --color=no

[pylint.MAIN]
# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use.
jobs = 0

[pylint.LOGGING]
# The type of string formatting that logging methods do.
# 'old' means using % formatting, 'new' is for '{}' formatting.
logging-format-style = new

[pylint.'MESSAGES CONTROL']
# Disable the message, report, category or checker with the given id(s).
disable =
    import-outside-toplevel,
    logging-fstring-interpolation,
    too-few-public-methods

[pylint.VARIABLES]
# List of qualified module names which can have objects that can redefine
# builtins.
redefining-builtins-modules = requests.exceptions

[flake8]
# Set the maximum allowed length for a line of code
max-line-length = 79

# Set the maximum allowed cyclomatic complexity for a function or method
max-complexity = 10

# When set to True, this option instructs Flake8 to display a summary of
# warnings and errors grouped by type at the end of its output.
statistics = True

# When set to True, this option causes Flake8 to display the offending line
# of code for each warning or error, providing better context for understanding
# and fixing the issues.
show-source = True

# List of files and directories to exclude from linting
exclude =
    .eggs,
    .git,
    .pytest_cache,
    .venv,
    __pycache__,
    build,
    dist

# List of modules to be considered as local
application-import-names =
    confluence,
    tests

# Set the import order style to follow Smarkets' style
import-order-style = smarkets

[coverage:report]
# Set the number of decimal places in coverage percentage
precision = 2

# Show lines that were not executed
show_missing = True

[coverage:html]
# Directory for the HTML format report
directory = htmlcov

[coverage:xml]
# Filename for the XML format report
output = coverage.xml

[coverage:run]
# Enable branch coverage (default: False)
branch = True

# Run tests in parallel (useful when using CI/CD)
parallel = True

# Filename for storing coverage data
data_file = coverage.db

# Omit specified files or directories from the report
omit =
    */.venv/*
    */__pycache__/*
    */site-packages/*
    */tests/*

[mypy]
# The version of Python to use for type checking.
python_version = 3.9

# Disallow function calls without type annotations.
disallow_untyped_calls = True

# Disallow defining functions without type annotations.
disallow_untyped_defs = True

# Disallow functions with incomplete type annotations.
disallow_incomplete_defs = True

# Check the bodies of untyped functions.
check_untyped_defs = True

# Ignore missing type hints for imported modules.
ignore_missing_imports = True
