name: CI

on:
  push:
    branches:
      # This is to make sure that there is no broken CI on
      # the main branch, and also for Sonarqube integration
      - 'main'
  # We need it for better Sonarqube integration
  pull_request:
    types: [opened, synchronize, reopened]

env:
  PYTHONUNBUFFERED: '1'

defaults:
  run:
    shell: bash

jobs:
  lint-and-test:
    name: Python ${{ matrix.python }}
    runs-on: ${{ vars.DEFAULT_RUNNER }}

    # The maximum number of minutes to let a workflow run
    # before GitHub automatically cancels it. Default: 360
    timeout-minutes: 30

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        python:
          - '3.10'
          - '3.11'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Setup pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Makefile selftest
        run: make help

      - name: Set up virtualenv
        run: make init

      - name: Install dependencies
        run: make install

      - name: Setup pylint cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pylint
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pylint-

      - name: Lint the code
        run: make lint

      - name: Check MANIFEST.in in a source package
        run: make manifest

      - name: Setuptools self-test
        run: |
          python setup.py --fullname
          python setup.py --long-description
          python setup.py --classifiers

      - name: Run unit tests with coverage
        run: make test

      - name: Combine coverage reports
        run: make ccov

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: matrix.python == '3.11'
        with:
          name: coverage
          path: ./coverage.xml


  analize-with-sonarqube:
    name: Analyze with Sonarqube
    needs: [lint-and-test]
    runs-on: ${{ vars.DEFAULT_RUNNER }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: ./

      - name: Run Sonar Scanner
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
