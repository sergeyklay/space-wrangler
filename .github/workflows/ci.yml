name: CI

on:
  push:
    branches:
      # This is to make sure that there is no broken CI on
      # the main branch, and also for Sonarqube integration
      - 'main'
  # We need it for better Sonarqube integration
  pull_request:
    types: [opened, synchronize, reopened]

env:
  PYTHONUNBUFFERED: '1'

defaults:
  run:
    shell: bash

jobs:
  lint-and-test:
    name: Python ${{ matrix.python }}
    runs-on: ${{ vars.DEFAULT_RUNNER }}

    # The maximum number of minutes to let a workflow run
    # before GitHub automatically cancels it. Default: 360
    timeout-minutes: 30

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        python:
          - '3.10'
          - '3.11'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Setuptools self-test
        run: |
          python setup.py --fullname
          python setup.py --long-description
          python setup.py --classifiers

      - name: Success Reporting
        if: success()
        run: git log --format=fuller -5

  analize-with-sonarqube:
    name: Analyze with Sonarqube
    needs: [lint-and-test]
    runs-on: ${{ vars.DEFAULT_RUNNER }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Sonar Scanner
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
